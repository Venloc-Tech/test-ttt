name: Release

on:
  workflow_dispatch:
    inputs:
      next:
        description: What is the next release tag (after this release, e.g. "1.1.0")?
        type: string
        required: true
      unexcpectedVersion:
        description: WARNING!!! This input is used for unexpected versions. For example, release should be with version 1.1.16, but you have breaking changes for release and set 1.2.0
        type: string
        required: false

env:
  NEXT_VERSION: ${{ github.event.inputs.next }}
  UNEXPECTED_VERSION: ${{ github.event.inputs.unexcpectedVersion }}

jobs:
  security:
    name: Workflow security
    runs-on: ubuntu-latest
    steps:
      - name: Check repository
        uses: ./.github/workflows/.isAllowedRespository.yaml
        secrets: inherit

      - name: Check repository
        uses: ./.github/workflows/.isAllowedRespository.yaml
        secrets: inherit


#  publish:
#    name: Release packages
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#        with:
#          ref: main
#      - name: Setup Bun
#        uses: oven-sh/setup-bun@v2
#        with:
#          bun-version: v1.2.5
#      - name: Check action repo
#        if: ${{ github.repository != vars.ACTIONS_REPOSITORY }}
#        run: |
#          bun -e 'throw new Error(`Repository dont match`)'
#      - name: Install Dependencies
#        run: bun install
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      - name: Release
#        run: bun scripts/release.ts
#
#  update:
#    name: Bump version in github
#    runs-on: ubuntu-latest
#    needs:
#      - publish
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#        with:
#          ref: main
#      - name: Setup Bun
#        uses: oven-sh/setup-bun@v2
#        with:
#          bun-version: v1.2.5
#      - name: Check repo
#        if: ${{ github.repository != vars.ACTIONS_REPOSITORY }}
#        run: |
#          bun -e "process.exit(1)"
#      - name: Install Dependencies
#        run: bun install
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}